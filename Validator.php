<?php


abstract class Validator {
  public $data;
  public $errors = [];
  public $fields;

  public function __construct($post_data, $array) {
    $this->data = $post_data;
    $this->fields = $array;
  }

  public function validateForm() {
    foreach ($this->fields as $field) {
      if (!array_key_exists($field, $this->data)) {
        trigger_error("$field is not present in the data");
        return;
      }
    }
  }

  abstract protected function validateEmail();

  protected function addError($key, $val) {
    $this->errors[$key] = $val;
  }

  public function validValue($field_name) {
    $value = $this->data["$field_name"];
    $value = trim($value);
    $value = stripslashes($value);
    $value = htmlspecialchars($value);
    return $value;
  }

}

class RegisterValidator extends Validator {

  public function validateForm() {
    parent::validateForm(); // TODO: Change the autogenerated stub

    $this->validateFirstname();
    $this->validateLastname();
    $this->validateEmail();
    $this->validatePassword();
    return $this->errors;
  }

  protected function validateFirstname() {
    $val = trim($this->data["fname"]);

    if (empty($val)) {
      $this->addError("fname", "You didn't enter username");
    }
    else {
      if (!preg_match('/^[a-zA-Z0-9]{3,30}$/', $val)) {
        $this->addError('fname', 'username must be 3-30 chars & alphanumeric');
      }
    }
  }

  protected function validateLastname() {
    $val = trim($this->data["lname"]);
    if (empty($val)) {
      $this->addError("lname", "You didn't enter last name");
    }
    else {
      if (!preg_match('/^[a-zA-Z0-9]{3,30}$/', $val)) {
        $this->addError('lname', 'last name must be 3-30 chars & alphanumeric');
      }
    }
  }

  protected function validateEmail() {
    $val = trim($this->data["u-email"]);
    if (empty($val)) {
      $this->addError("u-email", "You didn't enter email");
    }
    else {
      if (!filter_var($val, FILTER_VALIDATE_EMAIL)) {
        $this->addError("u-email", "email must be a valid");
      }
    }
  }

  protected function validatePassword() {
    $val = trim($this->data["u-password"]);
    if (empty($val)) {
      $this->addError("u-password", "You didn't enter password");
    }
  }

}

class LoginValidator extends Validator {

  public function validateForm() {
    parent::validateForm(); // TODO: Change the autogenerated stub

    $this->validateEmail();
    $this->validatePassword();
    return $this->errors;
  }

  protected function validateEmail() {
    $val = trim($this->data["l-email"]);
    if (empty($val)) {
      $this->addError("l-email", "You didn't enter email");
    }
    else {
      if (!filter_var($val, FILTER_VALIDATE_EMAIL)) {
        $this->addError("l-email", "email must be a valid");
      }
    }
  }

  protected function validatePassword() {
    $val = trim($this->data["l-password"]);
    if (empty($val)) {
      $this->addError("l-password", "You didn't enter password");
    }
  }

}