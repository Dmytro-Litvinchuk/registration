<?php


class Validator {
  protected $data;
  protected $errors = [];
  protected $value = [];
  protected $fields;

  public function __construct($post_data, $array) {
    $this->data = $post_data;
    $this->fields = $array;
  }

  public function validateForm() {
    foreach ($this->fields as $field) {
      if (!array_key_exists($field, $this->data)) {
        trigger_error("$field is not present in the data");
        return;
      }
    }
  }

  public function getValue($field_name) {
    return $this->value["$field_name"];
  }

  protected function validateEmail($input_name) {
    $val = $this->validValue("$input_name");
    if (empty($val)) {
      $this->addError("$input_name", "You didn't enter email");
    }
    else {
      if (!filter_var($val, FILTER_VALIDATE_EMAIL)) {
        $this->addError("$input_name", "email must be a valid");
      }
    }
  }

  protected function validatePassword($input_name) {
    $val = $this->validValue("$input_name");
    if (empty($val)) {
      $this->addError("$input_name", "You didn't enter password");
    }
  }

  protected function addError($key, $val) {
    $this->errors[$key] = $val;
  }

  protected function validValue($field_name) {
    $v = trim($this->data["$field_name"]);
    $v = stripslashes($v);
    return $this->value["$field_name"] = htmlspecialchars($v);
  }

}

class RegisterValidator extends Validator {

  public function validateForm() {
    parent::validateForm(); // TODO: Change the autogenerated stub

    $this->validateFirstname();
    $this->validateLastname();
    $this->validateEmail("u-email");
    $this->validatePassword("u-password");
    return $this->errors;
  }

  protected function validateFirstname() {
    $val = $this->validValue("fname");

    if (empty($val)) {
      $this->addError("fname", "You didn't enter username");
    }
    else {
      if (!preg_match('/^[a-zA-Z0-9]{3,30}$/', $val)) {
        $this->addError('fname', 'username must be 3-30 chars & alphanumeric');
      }
    }
  }

  protected function validateLastname() {
    $val = $this->validValue("lname");
    if (empty($val)) {
      $this->addError("lname", "You didn't enter last name");
    }
    else {
      if (!preg_match('/^[a-zA-Z0-9]{3,30}$/', $val)) {
        $this->addError('lname', 'last name must be 3-30 chars & alphanumeric');
      }
    }
  }

}

class LoginValidator extends Validator {

  public function validateForm() {
    parent::validateForm(); // TODO: Change the autogenerated stub

    $this->validateEmail("l-email");
    $this->validatePassword("l-password");
    return $this->errors;
  }

}